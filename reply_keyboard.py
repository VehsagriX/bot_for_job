from aiogram import types
from aiogram.types import KeyboardButton

from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

from config import all_company, CHANNEL_ID_ADMIN
from send_message_in_group import is_admin


def kb_get_started() -> types.ReplyKeyboardMarkup:
    kb = [
        [
            types.KeyboardButton(text='–ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É üíº'),
            types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞ üîö'),
        ]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboard


def kb_run_step(user_id) -> types.ReplyKeyboardMarkup:
    kb_builder = ReplyKeyboardBuilder()

    kb_builder.button(text='–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É ‚úçÔ∏è'),
    kb_builder.button(text='–ú–æ—è –∞–Ω–∫–µ—Ç–∞ üìù'),
    kb_builder.button(text='–ú–æ–∏ –∑–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ ‚è≥'),
    kb_builder.button(text='–î–æ—Å—Ç—É–ø –∫ –ì–æ—Å—Ç–µ–≤–æ–º—É WIFIüõú')
    kb_builder.button(text='–û—Ç–º–µ–Ω–∞ üîö')
    if is_admin(user_id):
        kb_builder.add(KeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"))
        kb_builder.adjust(2,1,1,2)
        return kb_builder.as_markup(resize_keyboard=True)
    # –≠—Ç–æ –¥–ª—è –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
    kb_builder.adjust(2, 1, 1, 1)

    return kb_builder.as_markup(resize_keyboard=True)


def keyboard_builder() -> types.ReplyKeyboardMarkup:
    kb = [
        [
            types.KeyboardButton(text="–ó–∞–ø—Ä–æ—Å"),
            types.KeyboardButton(text="–ò–Ω—Ü–∏–¥–µ–Ω—Ç"),
            types.KeyboardButton(text='–ù–∞–∑–∞–¥ ‚óÄÔ∏è'),
        ],
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ"
    )

    return keyboard


def keyboard_answer() -> types.ReplyKeyboardMarkup:
    kb = [
        [
            types.KeyboardButton(text='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'),
            types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞'),
        ]
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ"
    )
    return keyboard


def edit_kb() -> types.ReplyKeyboardMarkup:
    kb = [
        [
            types.KeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ'),
            types.KeyboardButton(text='–ù–∞–∑–∞–¥ ‚óÄÔ∏è'),
        ]
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ"
    )
    return keyboard


def edit_key_kb() -> types.ReplyKeyboardMarkup:
    kb = [
        [
            types.KeyboardButton(text='–ü–æ—á—Ç–∞ üìß'),
            types.KeyboardButton(text='–ù–æ–º–µ—Ä üì±'),
            types.KeyboardButton(text='–ù–∞–∑–∞–¥ ‚óÄÔ∏è'),
        ]
    ]

    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb,
        resize_keyboard=True,
        one_time_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ"
    )
    return keyboard


# def kb_company(list_company=all_company) -> types.ReplyKeyboardMarkup:
#     # list_company = ['–ì–û', 'Evolet']
#     builder = ReplyKeyboardBuilder()
#     for i in range(len(list_company)):
#         builder.add(types.KeyboardButton(text=str(i+1)))
#     builder.adjust(5)
#
#     return builder.as_markup(resize_keyboard=True, one_time_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ")