from aiogram import Router, F, flags
from aiogram.enums import ChatAction
from aiogram.filters import Command, CommandStart
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.utils.formatting import Text, Bold

from add_to_file import is_registered
from keyboard import keyboard_answer, kb_run_step, kb_get_started
from aiogram.fsm.context import FSMContext
from bot_states import User
from examination import is_user_subscribed
from config import CHANNEL_ID

router = Router()


@router.message(F.text, CommandStart())
@flags.chat_action(ChatAction.TYPING)
async def handle_start(message: Message, state: FSMContext):
    is_member = await is_user_subscribed(message.from_user.id)
    if is_member:
        if not is_registered(message.from_user.id):
            await state.set_state(User.user_id)
            await state.set_state(User.user_login)
            await state.set_state(User.chat_id)
            content = Text(
                "Hello, Motheer",
                Bold(message.from_user.full_name)
            )
            await state.clear()

            await message.answer(
                **content.as_kwargs()
            )
            await state.update_data(user_id=message.from_user.id)
            await state.update_data(user_login=message.from_user.username)
            await state.update_data(chat_id=message.chat.id)
            await message.answer('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã, –≤—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é?',
                                 reply_markup=keyboard_answer())
            await state.set_state(User.user_name)
            await state.set_state(User.user_last_name)
        else:
            await message.answer('–î–æ–±—Ä—ã–π –¥–µ–Ω—å, —è –ø–æ–º–æ—â–Ω–∏–∫ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ KOINOTI NAV. '
                                 '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ —Å–¥–µ–ª–∞—Ç—å', reply_markup=kb_get_started())

    else:
        await message.answer('–ò–∑–∏–Ω–∏—Ç–µ –Ω–æ —Å –≤–∞–º–∏ —è –Ω–µ –±—É–¥—É —Ä–∞–±–æ—Ç–∞—Ç—å')
        await message.answer('–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ')


@router.message(Command(commands=['/get_stared']))
@router.message(F.text.lower() == "–Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É üíº")
@router.message(F.text.lower() == "–Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
async def handle_run(message: Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ ‚¨áÔ∏è', reply_markup=kb_run_step())


@router.message(Command(commands=["cancel"]))
@router.message(F.text.lower() == "–æ—Ç–º–µ–Ω–∞ üîö")
@router.message(F.text.lower() == '–æ—Ç–º–µ–Ω–∞')
@flags.chat_action(ChatAction.TYPING)
async def cmd_cancel(message: Message, state: FSMContext):
    await state.clear()

    await message.answer(
        text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
        reply_markup=ReplyKeyboardRemove()
    )
    await message.answer('–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!üòâ')


@router.message(Command('/myprofile'))
@router.message(F.text.lower() == "–º–æ—è –∞–Ω–∫–µ—Ç–∞ üìù")
async def edit_profile(message: Message):
    pass


@router.message(Command('help'))
async def handle_help(message: Message):
    pass
