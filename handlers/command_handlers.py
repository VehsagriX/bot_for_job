from aiogram import Router, F, flags
from aiogram.enums import ChatAction
from aiogram.filters import Command, CommandStart, StateFilter
from aiogram.fsm.state import default_state
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.utils.formatting import Text, Bold

from config import users_for_voucher, CHANNEL_ID_ADMIN
from crud_request_file import show_all_requests
from crud_user_file import is_registered, get_user_data
from get_vaucher import get_voucher
from reply_keyboard import keyboard_answer, kb_get_started, edit_kb, keyboard_builder, edit_key_kb, \
    kb_run_step_user, kb_run_step_admin

from bot_states import User, Request, EditState
from send_message_in_group import is_user_subscribed, is_admin

router = Router()


@router.message(F.text, CommandStart())
@flags.chat_action(ChatAction.TYPING)
async def handle_start_subscribed(message: Message, state: FSMContext) -> None:
    is_member = await is_user_subscribed(message.from_user.id)

    if is_member:
        if not is_registered(message.from_user.id):
            await state.set_state(User.user_id)
            await state.set_state(User.user_login)
            await state.set_state(User.chat_id)
            content = Text(
                "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é ",
                Bold(message.from_user.full_name)
            )
            await state.clear()

            await message.answer(
                **content.as_kwargs()
            )
            await state.update_data(user_id=message.from_user.id)
            await state.update_data(user_login=message.from_user.username)
            await state.update_data(chat_id=message.chat.id)
            await message.answer('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ì–æ—Ç–æ–≤—ã –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é?',
                                 reply_markup=keyboard_answer())
            await state.set_state(User.user_name)
            await state.set_state(User.user_last_name)
        else:
            await message.answer(
                '–î–æ–±—Ä—ã–π –¥–µ–Ω—å, —è –ø–æ–º–æ—â–Ω–∏–∫ –ì—Ä—É–ø–ø—ã –ü–æ–¥–¥–µ—Ä–∂–∫–∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –î–ò–¢ –ó–ê–û ¬´–ö–û–ò–ù–û–¢–ò –ù–ê–í¬ª. –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤—ã —Ö–æ—Ç–µ–ª–∏ –±—ã —Å–¥–µ–ª–∞—Ç—å ‚¨áÔ∏è',
                reply_markup=kb_get_started())

    else:
        await cancel_message(message)


@router.message(F.text, Command('get_started'))
@router.message(F.text.lower() == "–Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É üíº")
@router.message(F.text.lower() == "–Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É")
async def handle_run(message: Message) -> None:
    admin = await is_admin(message.from_user.id)
    if not admin:
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ ‚¨áÔ∏è', reply_markup=kb_run_step_user())
    else:
        await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ ‚¨áÔ∏è', reply_markup=kb_run_step_admin())


@router.message(F.text.lower() == '—Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É ‚úçÔ∏è')
@router.message(F.text.lower() == '—Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É')
async def on_startup(message: Message, state: FSMContext) -> None:
    await message.answer(
        '–ó–∞–ø—Ä–æ—Å - –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, –ª–∏–±–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç.\n–ò–Ω—Ü–∏–¥–µ–Ω—Ç - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –≤ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –ü–û. ‚¨áÔ∏è',
        reply_markup=keyboard_builder())
    await state.set_state(Request.request_type)


@router.message(F.text.lower() == '–Ω–∞–∑–∞–¥ ‚óÄÔ∏è', Request.request_type)
@router.message(F.text.lower() == '–Ω–∞–∑–∞–¥ ‚óÄÔ∏è', StateFilter(default_state))
async def get_back(message: Message, state: FSMContext):
    await state.clear()
    await handle_run(message)


@router.message(F.text, Command("cancel"))
@router.message(F.text.lower() == "–æ—Ç–º–µ–Ω–∞ üîö")
@router.message(F.text.lower() == '–æ—Ç–º–µ–Ω–∞')
@flags.chat_action(ChatAction.TYPING)
async def cmd_cancel(message: Message, state: FSMContext):
    await state.clear()

    await message.answer(
        text="–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
        reply_markup=ReplyKeyboardRemove()
    )
    await message.answer('–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!üòâ')


@router.message(Command('/myprofile'))
@router.message(F.text.lower() == "–º–æ—è –∞–Ω–∫–µ—Ç–∞ üìù")
@router.message(F.text.lower() == "–º–æ—è –∞–Ω–∫–µ—Ç–∞")
async def view_profile(message: Message) -> None:
    name, last_name, phone, email, company, departament = get_user_data(message.from_user.id)
    my_text = f'–ò–º—è: {name}\n–§–∞–º–∏–ª–∏—è: {last_name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n–ü–æ—á—Ç–∞: {email}\n–ö–æ–º–ø–∞–Ω–∏—è: {company}\n–û—Ç–¥–µ–ª: {departament}'
    await message.answer(text=my_text, reply_markup=edit_kb())


@router.message(F.text == '–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')
@router.message(F.text == '–∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ')
async def change_profile(message: Message, state: FSMContext) -> None:
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –±—É–¥–µ—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å‚¨áÔ∏è', reply_markup=edit_key_kb())
    await state.set_state(EditState.edit_state)


@router.message(F.text == '–ú–æ–∏ –∑–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ ‚è≥')
@router.message(F.text.lower() == '–º–æ–∏ –∑–∞—è–≤–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ ‚è≥')
async def show_all_request(message: Message) -> None:
    user_id = message.from_user.id
    result = show_all_requests(user_id)
    if len(result) > 0:
        for text in result:
            await message.answer(text)
    else:
        await message.answer('–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫')


@router.message(F.text == '–î–æ—Å—Ç—É–ø –∫ –ì–æ—Å—Ç–µ–≤–æ–º—É WIFIüõú', StateFilter(default_state))
@router.message(F.text.lower() == '–¥–æ—Å—Ç—É–ø –∫ –≥–æ—Å—Ç–µ–≤–æ–º—É wifiüõú', StateFilter(default_state))
async def send_voucher(message: Message):
    if str(message.from_user.id) in users_for_voucher:
        result = get_voucher(message.from_user.id, message.from_user.username)
        await message.answer(f'{result}')
    else:
        await message.answer('–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫—É 446607070')
        await handle_run(message)


@router.message(F.text.lower() == '–Ω–∞–∑–∞–¥ ‚óÄÔ∏è', EditState.edit_state)
@router.message(F.text.lower() == '–Ω–∞–∑–∞–¥ ‚óÄÔ∏è', StateFilter(default_state))
async def get_back(message: Message, state: FSMContext) -> None:
    await state.clear()
    await handle_run(message)


@router.message(Command('help'))
async def handle_help(message: Message) -> None:
    text = """–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Å —Ü–µ–ª—å—é —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –≥—Ä—É–ø–ø–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–ì–ü–ü) –î–ò–¢ –ó–ê–û ¬´–ö–û–ò–ù–û–¢–ò –ù–ê–í¬ª. –ú—ã —Å—Ç—Ä–µ–º–∏–º—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω—É—é –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—É—é –ø–æ–º–æ—â—å –ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º, —Å–≤—è–∑–∞–Ω–Ω—ã–º —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –ò–¢ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è. –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–∞–º –±—ã—Å—Ç—Ä–µ–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –≤—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏.
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞: 
‚úÖ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ò–¢ –ø–æ–¥–¥–µ—Ä–∂–∫—É;
‚úÖ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –ò–¢ —Ä–∞–±–æ—Ç—ã;
‚úÖ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–∫—É–ø –ò–¢ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è;
‚úÖ –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏;
‚úÖ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º –∑–∞—è–≤–∫–∏;
‚úÖ –≤—ã–¥–∞—Ç—å –≤–∞—É—á–µ—Ä –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –≥–æ—Å—Ç–µ–≤–æ–º—É WI FI;
‚úÖ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–µ–ª–µ—Ñ–æ–Ω, –ø–æ—á—Ç–∞);
/start - –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–º–∞–Ω–¥—É - /start, –∏–ª–∏ –¥–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –±–æ—Ç—É –ø—É—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è /start;
/cancel ‚Äì –û—Ç–º–µ–Ω—è–µ—Ç –∏ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º, –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç –∑–∞–Ω–æ–≤–æ;
"""
    await message.answer(text)


@router.message(F.text, StateFilter(default_state))
async def cancel_message(message: Message) -> None:
    await message.answer("""–ü—Ä–æ—à—É –ø—Ä–æ—â–µ–Ω–∏—è, –ø–æ –ø—Ä–∏—á–∏–Ω–µ —Ç–æ–≥–æ, —á—Ç–æ –≤—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç–µ –≤ —Å–ø–∏—Å–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —è –Ω–µ –º–æ–≥—É –≤–∞–º –ø–æ–º–æ—á—å. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è.""")
